{"id":"node_modules/postcss/lib/processor.js","dependencies":[{"name":"C:\\Users\\Admin\\Desktop\\Animestudio+\\package.json","includedInParent":true,"mtime":1627075610080},{"name":"C:\\Users\\Admin\\Desktop\\Animestudio+\\node_modules\\postcss\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./lazy-result","loc":{"line":6,"column":49},"parent":"C:\\Users\\Admin\\Desktop\\Animestudio+\\node_modules\\postcss\\lib\\processor.js","resolved":"C:\\Users\\Admin\\Desktop\\Animestudio+\\node_modules\\postcss\\lib\\lazy-result.js"},{"name":"process","parent":"C:\\Users\\Admin\\Desktop\\Animestudio+\\node_modules\\postcss\\lib\\processor.js","resolved":"C:\\Users\\Admin\\Desktop\\Animestudio+\\node_modules\\process\\browser.js"}],"generated":{"js":"var process = require(\"process\");\n\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _lazyResult = _interopRequireDefault(require(\"./lazy-result\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n/**\n * Contains plugins to process CSS. Create one `Processor` instance,\n * initialize its plugins, and then use that instance on numerous CSS files.\n *\n * @example\n * const processor = postcss([autoprefixer, precss])\n * processor.process(css1).then(result => console.log(result.css))\n * processor.process(css2).then(result => console.log(result.css))\n */\n\n\nvar Processor = /*#__PURE__*/function () {\n  /**\n   * @param {Array.<Plugin|pluginFunction>|Processor} plugins PostCSS plugins.\n   *        See {@link Processor#use} for plugin format.\n   */\n  function Processor(plugins) {\n    if (plugins === void 0) {\n      plugins = [];\n    }\n    /**\n     * Current PostCSS version.\n     *\n     * @type {string}\n     *\n     * @example\n     * if (result.processor.version.split('.')[0] !== '6') {\n     *   throw new Error('This plugin works only with PostCSS 6')\n     * }\n     */\n\n\n    this.version = '7.0.36';\n    /**\n     * Plugins added to this processor.\n     *\n     * @type {pluginFunction[]}\n     *\n     * @example\n     * const processor = postcss([autoprefixer, precss])\n     * processor.plugins.length //=> 2\n     */\n\n    this.plugins = this.normalize(plugins);\n  }\n  /**\n   * Adds a plugin to be used as a CSS processor.\n   *\n   * PostCSS plugin can be in 4 formats:\n   * * A plugin created by {@link postcss.plugin} method.\n   * * A function. PostCSS will pass the function a @{link Root}\n   *   as the first argument and current {@link Result} instance\n   *   as the second.\n   * * An object with a `postcss` method. PostCSS will use that method\n   *   as described in #2.\n   * * Another {@link Processor} instance. PostCSS will copy plugins\n   *   from that instance into this one.\n   *\n   * Plugins can also be added by passing them as arguments when creating\n   * a `postcss` instance (see [`postcss(plugins)`]).\n   *\n   * Asynchronous plugins should return a `Promise` instance.\n   *\n   * @param {Plugin|pluginFunction|Processor} plugin PostCSS plugin\n   *                                                 or {@link Processor}\n   *                                                 with plugins.\n   *\n   * @example\n   * const processor = postcss()\n   *   .use(autoprefixer)\n   *   .use(precss)\n   *\n   * @return {Processes} Current processor to make methods chain.\n   */\n\n\n  var _proto = Processor.prototype;\n\n  _proto.use = function use(plugin) {\n    this.plugins = this.plugins.concat(this.normalize([plugin]));\n    return this;\n  }\n  /**\n   * Parses source CSS and returns a {@link LazyResult} Promise proxy.\n   * Because some plugins can be asynchronous it doesn’t make\n   * any transformations. Transformations will be applied\n   * in the {@link LazyResult} methods.\n   *\n   * @param {string|toString|Result} css String with input CSS or any object\n   *                                     with a `toString()` method,\n   *                                     like a Buffer. Optionally, send\n   *                                     a {@link Result} instance\n   *                                     and the processor will take\n   *                                     the {@link Root} from it.\n   * @param {processOptions} [opts]      Options.\n   *\n   * @return {LazyResult} Promise proxy.\n   *\n   * @example\n   * processor.process(css, { from: 'a.css', to: 'a.out.css' })\n   *   .then(result => {\n   *      console.log(result.css)\n   *   })\n   */\n  ;\n\n  _proto.process = function (_process) {\n    function process(_x) {\n      return _process.apply(this, arguments);\n    }\n\n    process.toString = function () {\n      return _process.toString();\n    };\n\n    return process;\n  }(function (css, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    if (this.plugins.length === 0 && opts.parser === opts.stringifier) {\n      if (\"development\" !== 'production') {\n        if (typeof console !== 'undefined' && console.warn) {\n          console.warn('You did not set any plugins, parser, or stringifier. ' + 'Right now, PostCSS does nothing. Pick plugins for your case ' + 'on https://www.postcss.parts/ and use them in postcss.config.js.');\n        }\n      }\n    }\n\n    return new _lazyResult.default(this, css, opts);\n  });\n\n  _proto.normalize = function normalize(plugins) {\n    var normalized = [];\n\n    for (var _iterator = _createForOfIteratorHelperLoose(plugins), _step; !(_step = _iterator()).done;) {\n      var i = _step.value;\n\n      if (i.postcss === true) {\n        var plugin = i();\n        throw new Error('PostCSS plugin ' + plugin.postcssPlugin + ' requires PostCSS 8.\\n' + 'Migration guide for end-users:\\n' + 'https://github.com/postcss/postcss/wiki/PostCSS-8-for-end-users');\n      }\n\n      if (i.postcss) i = i.postcss;\n\n      if (typeof i === 'object' && Array.isArray(i.plugins)) {\n        normalized = normalized.concat(i.plugins);\n      } else if (typeof i === 'function') {\n        normalized.push(i);\n      } else if (typeof i === 'object' && (i.parse || i.stringify)) {\n        if (\"development\" !== 'production') {\n          throw new Error('PostCSS syntaxes cannot be used as plugins. Instead, please use ' + 'one of the syntax/parser/stringifier options as outlined ' + 'in your PostCSS runner documentation.');\n        }\n      } else if (typeof i === 'object' && i.postcssPlugin) {\n        throw new Error('PostCSS plugin ' + i.postcssPlugin + ' requires PostCSS 8.\\n' + 'Migration guide for end-users:\\n' + 'https://github.com/postcss/postcss/wiki/PostCSS-8-for-end-users');\n      } else {\n        throw new Error(i + ' is not a PostCSS plugin');\n      }\n    }\n\n    return normalized;\n  };\n\n  return Processor;\n}();\n\nvar _default = Processor;\n/**\n * @callback builder\n * @param {string} part          Part of generated CSS connected to this node.\n * @param {Node}   node          AST node.\n * @param {\"start\"|\"end\"} [type] Node’s part type.\n */\n\n/**\n * @callback parser\n *\n * @param {string|toString} css   String with input CSS or any object\n *                                with toString() method, like a Buffer.\n * @param {processOptions} [opts] Options with only `from` and `map` keys.\n *\n * @return {Root} PostCSS AST\n */\n\n/**\n * @callback stringifier\n *\n * @param {Node} node       Start node for stringifing. Usually {@link Root}.\n * @param {builder} builder Function to concatenate CSS from node’s parts\n *                          or generate string and source map.\n *\n * @return {void}\n */\n\n/**\n * @typedef {object} syntax\n * @property {parser} parse          Function to generate AST by string.\n * @property {stringifier} stringify Function to generate string by AST.\n */\n\n/**\n * @typedef {object} toString\n * @property {function} toString\n */\n\n/**\n * @callback pluginFunction\n * @param {Root} root     Parsed input CSS.\n * @param {Result} result Result to set warnings or check other plugins.\n */\n\n/**\n * @typedef {object} Plugin\n * @property {function} postcss PostCSS plugin function.\n */\n\n/**\n * @typedef {object} processOptions\n * @property {string} from             The path of the CSS source file.\n *                                     You should always set `from`,\n *                                     because it is used in source map\n *                                     generation and syntax error messages.\n * @property {string} to               The path where you’ll put the output\n *                                     CSS file. You should always set `to`\n *                                     to generate correct source maps.\n * @property {parser} parser           Function to generate AST by string.\n * @property {stringifier} stringifier Class to generate string by AST.\n * @property {syntax} syntax           Object with `parse` and `stringify`.\n * @property {object} map              Source map options.\n * @property {boolean} map.inline                    Does source map should\n *                                                   be embedded in the output\n *                                                   CSS as a base64-encoded\n *                                                   comment.\n * @property {string|object|false|function} map.prev Source map content\n *                                                   from a previous\n *                                                   processing step\n *                                                   (for example, Sass).\n *                                                   PostCSS will try to find\n *                                                   previous map automatically,\n *                                                   so you could disable it by\n *                                                   `false` value.\n * @property {boolean} map.sourcesContent            Does PostCSS should set\n *                                                   the origin content to map.\n * @property {string|false} map.annotation           Does PostCSS should set\n *                                                   annotation comment to map.\n * @property {string} map.from                       Override `from` in map’s\n *                                                   sources`.\n */\n\nexports.default = _default;\nmodule.exports = exports.default;"},"sourceMaps":{"js":{"mappings":[{"source":"processor.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"processor.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":4}},{"source":"processor.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":15}},{"source":"processor.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":18}},{"source":"processor.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":40}},{"source":"processor.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":41}},{"source":"processor.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":48}},{"source":"processor.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":49}},{"source":"processor.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":64}},{"source":"processor.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":65}},{"source":"processor.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":66}},{"source":"processor.es6","name":null,"original":{"line":3,"column":0},"generated":{"line":58,"column":0}},{"source":"processor.es6","name":"Processor","original":{"line":12,"column":6},"generated":{"line":69,"column":4}},{"source":"processor.es6","name":null,"original":{"line":13,"column":2},"generated":{"line":70,"column":0}},{"source":"processor.es6","name":null,"original":{"line":17,"column":2},"generated":{"line":74,"column":0}},{"source":"processor.es6","name":null,"original":{"line":17,"column":2},"generated":{"line":74,"column":11}},{"source":"processor.es6","name":null,"original":{"line":17,"column":2},"generated":{"line":74,"column":20}},{"source":"processor.es6","name":"plugins","original":{"line":17,"column":15},"generated":{"line":74,"column":21}},{"source":"processor.es6","name":null,"original":{"line":17,"column":2},"generated":{"line":74,"column":28}},{"source":"processor.es6","name":null,"original":{"line":17,"column":29},"generated":{"line":74,"column":30}},{"source":"processor.es6","name":null,"original":{"line":17,"column":29},"generated":{"line":75,"column":0}},{"source":"processor.es6","name":"plugins","original":{"line":17,"column":15},"generated":{"line":75,"column":8}},{"source":"processor.es6","name":null,"original":{"line":17,"column":29},"generated":{"line":75,"column":15}},{"source":"processor.es6","name":null,"original":{"line":17,"column":29},"generated":{"line":75,"column":20}},{"source":"processor.es6","name":null,"original":{"line":17,"column":29},"generated":{"line":75,"column":25}},{"source":"processor.es6","name":null,"original":{"line":17,"column":29},"generated":{"line":75,"column":26}},{"source":"processor.es6","name":null,"original":{"line":17,"column":29},"generated":{"line":75,"column":28}},{"source":"processor.es6","name":"plugins","original":{"line":17,"column":15},"generated":{"line":76,"column":0}},{"source":"processor.es6","name":"plugins","original":{"line":17,"column":15},"generated":{"line":76,"column":6}},{"source":"processor.es6","name":null,"original":{"line":17,"column":29},"generated":{"line":76,"column":13}},{"source":"processor.es6","name":null,"original":{"line":17,"column":25},"generated":{"line":76,"column":16}},{"source":"processor.es6","name":"plugins","original":{"line":17,"column":15},"generated":{"line":76,"column":18}},{"source":"processor.es6","name":null,"original":{"line":17,"column":29},"generated":{"line":77,"column":0}},{"source":"processor.es6","name":null,"original":{"line":18,"column":4},"generated":{"line":78,"column":0}},{"source":"processor.es6","name":null,"original":{"line":28,"column":4},"generated":{"line":90,"column":0}},{"source":"processor.es6","name":"version","original":{"line":28,"column":9},"generated":{"line":90,"column":9}},{"source":"processor.es6","name":null,"original":{"line":28,"column":4},"generated":{"line":90,"column":16}},{"source":"processor.es6","name":null,"original":{"line":28,"column":19},"generated":{"line":90,"column":19}},{"source":"processor.es6","name":null,"original":{"line":28,"column":4},"generated":{"line":90,"column":27}},{"source":"processor.es6","name":null,"original":{"line":29,"column":4},"generated":{"line":91,"column":0}},{"source":"processor.es6","name":null,"original":{"line":38,"column":4},"generated":{"line":101,"column":0}},{"source":"processor.es6","name":"plugins","original":{"line":38,"column":9},"generated":{"line":101,"column":9}},{"source":"processor.es6","name":null,"original":{"line":38,"column":4},"generated":{"line":101,"column":16}},{"source":"processor.es6","name":null,"original":{"line":38,"column":19},"generated":{"line":101,"column":19}},{"source":"processor.es6","name":"normalize","original":{"line":38,"column":24},"generated":{"line":101,"column":24}},{"source":"processor.es6","name":null,"original":{"line":38,"column":19},"generated":{"line":101,"column":33}},{"source":"processor.es6","name":"plugins","original":{"line":38,"column":34},"generated":{"line":101,"column":34}},{"source":"processor.es6","name":null,"original":{"line":38,"column":19},"generated":{"line":101,"column":41}},{"source":"processor.es6","name":null,"original":{"line":38,"column":4},"generated":{"line":101,"column":42}},{"source":"processor.es6","name":null,"original":{"line":39,"column":3},"generated":{"line":102,"column":0}},{"source":"processor.es6","name":null,"original":{"line":41,"column":2},"generated":{"line":103,"column":0}},{"source":"processor.es6","name":"use","original":{"line":70,"column":2},"generated":{"line":136,"column":9}},{"source":"processor.es6","name":null,"original":{"line":70,"column":2},"generated":{"line":136,"column":15}},{"source":"processor.es6","name":null,"original":{"line":70,"column":2},"generated":{"line":136,"column":24}},{"source":"processor.es6","name":null,"original":{"line":70,"column":2},"generated":{"line":136,"column":27}},{"source":"processor.es6","name":"plugin","original":{"line":70,"column":7},"generated":{"line":136,"column":28}},{"source":"processor.es6","name":null,"original":{"line":70,"column":2},"generated":{"line":136,"column":34}},{"source":"processor.es6","name":null,"original":{"line":70,"column":15},"generated":{"line":136,"column":36}},{"source":"processor.es6","name":null,"original":{"line":71,"column":4},"generated":{"line":137,"column":0}},{"source":"processor.es6","name":"plugins","original":{"line":71,"column":9},"generated":{"line":137,"column":9}},{"source":"processor.es6","name":null,"original":{"line":71,"column":4},"generated":{"line":137,"column":16}},{"source":"processor.es6","name":null,"original":{"line":71,"column":19},"generated":{"line":137,"column":19}},{"source":"processor.es6","name":"plugins","original":{"line":71,"column":24},"generated":{"line":137,"column":24}},{"source":"processor.es6","name":null,"original":{"line":71,"column":19},"generated":{"line":137,"column":31}},{"source":"processor.es6","name":"concat","original":{"line":71,"column":32},"generated":{"line":137,"column":32}},{"source":"processor.es6","name":null,"original":{"line":71,"column":19},"generated":{"line":137,"column":38}},{"source":"processor.es6","name":null,"original":{"line":71,"column":39},"generated":{"line":137,"column":39}},{"source":"processor.es6","name":"normalize","original":{"line":71,"column":44},"generated":{"line":137,"column":44}},{"source":"processor.es6","name":null,"original":{"line":71,"column":39},"generated":{"line":137,"column":53}},{"source":"processor.es6","name":null,"original":{"line":71,"column":54},"generated":{"line":137,"column":54}},{"source":"processor.es6","name":"plugin","original":{"line":71,"column":55},"generated":{"line":137,"column":55}},{"source":"processor.es6","name":null,"original":{"line":71,"column":54},"generated":{"line":137,"column":61}},{"source":"processor.es6","name":null,"original":{"line":71,"column":39},"generated":{"line":137,"column":62}},{"source":"processor.es6","name":null,"original":{"line":71,"column":19},"generated":{"line":137,"column":63}},{"source":"processor.es6","name":null,"original":{"line":71,"column":4},"generated":{"line":137,"column":64}},{"source":"processor.es6","name":null,"original":{"line":72,"column":4},"generated":{"line":138,"column":0}},{"source":"processor.es6","name":null,"original":{"line":72,"column":11},"generated":{"line":138,"column":11}},{"source":"processor.es6","name":null,"original":{"line":72,"column":4},"generated":{"line":138,"column":15}},{"source":"processor.es6","name":null,"original":{"line":73,"column":3},"generated":{"line":139,"column":0}},{"source":"processor.es6","name":null,"original":{"line":75,"column":2},"generated":{"line":140,"column":0}},{"source":"processor.es6","name":"process","original":{"line":97,"column":2},"generated":{"line":164,"column":9}},{"source":"processor.es6","name":null,"original":{"line":97,"column":2},"generated":{"line":174,"column":4}},{"source":"processor.es6","name":"css","original":{"line":97,"column":11},"generated":{"line":174,"column":14}},{"source":"processor.es6","name":null,"original":{"line":97,"column":2},"generated":{"line":174,"column":17}},{"source":"processor.es6","name":"opts","original":{"line":97,"column":16},"generated":{"line":174,"column":19}},{"source":"processor.es6","name":null,"original":{"line":97,"column":2},"generated":{"line":174,"column":23}},{"source":"processor.es6","name":null,"original":{"line":97,"column":28},"generated":{"line":174,"column":25}},{"source":"processor.es6","name":null,"original":{"line":97,"column":28},"generated":{"line":175,"column":0}},{"source":"processor.es6","name":"opts","original":{"line":97,"column":16},"generated":{"line":175,"column":8}},{"source":"processor.es6","name":null,"original":{"line":97,"column":28},"generated":{"line":175,"column":12}},{"source":"processor.es6","name":null,"original":{"line":97,"column":28},"generated":{"line":175,"column":17}},{"source":"processor.es6","name":null,"original":{"line":97,"column":28},"generated":{"line":175,"column":22}},{"source":"processor.es6","name":null,"original":{"line":97,"column":28},"generated":{"line":175,"column":23}},{"source":"processor.es6","name":null,"original":{"line":97,"column":28},"generated":{"line":175,"column":25}},{"source":"processor.es6","name":"opts","original":{"line":97,"column":16},"generated":{"line":176,"column":0}},{"source":"processor.es6","name":"opts","original":{"line":97,"column":16},"generated":{"line":176,"column":6}},{"source":"processor.es6","name":null,"original":{"line":97,"column":28},"generated":{"line":176,"column":10}},{"source":"processor.es6","name":null,"original":{"line":97,"column":23},"generated":{"line":176,"column":13}},{"source":"processor.es6","name":"opts","original":{"line":97,"column":16},"generated":{"line":176,"column":15}},{"source":"processor.es6","name":null,"original":{"line":97,"column":28},"generated":{"line":177,"column":0}},{"source":"processor.es6","name":null,"original":{"line":98,"column":4},"generated":{"line":179,"column":0}},{"source":"processor.es6","name":null,"original":{"line":98,"column":8},"generated":{"line":179,"column":8}},{"source":"processor.es6","name":"plugins","original":{"line":98,"column":13},"generated":{"line":179,"column":13}},{"source":"processor.es6","name":null,"original":{"line":98,"column":8},"generated":{"line":179,"column":20}},{"source":"processor.es6","name":"length","original":{"line":98,"column":21},"generated":{"line":179,"column":21}},{"source":"processor.es6","name":null,"original":{"line":98,"column":8},"generated":{"line":179,"column":27}},{"source":"processor.es6","name":null,"original":{"line":98,"column":32},"generated":{"line":179,"column":32}},{"source":"processor.es6","name":null,"original":{"line":98,"column":8},"generated":{"line":179,"column":33}},{"source":"processor.es6","name":"opts","original":{"line":98,"column":37},"generated":{"line":179,"column":37}},{"source":"processor.es6","name":null,"original":{"line":98,"column":41},"generated":{"line":179,"column":41}},{"source":"processor.es6","name":"parser","original":{"line":98,"column":42},"generated":{"line":179,"column":42}},{"source":"processor.es6","name":"opts","original":{"line":98,"column":37},"generated":{"line":179,"column":48}},{"source":"processor.es6","name":"opts","original":{"line":98,"column":53},"generated":{"line":179,"column":53}},{"source":"processor.es6","name":null,"original":{"line":98,"column":57},"generated":{"line":179,"column":57}},{"source":"processor.es6","name":"stringifier","original":{"line":98,"column":58},"generated":{"line":179,"column":58}},{"source":"processor.es6","name":null,"original":{"line":98,"column":4},"generated":{"line":179,"column":69}},{"source":"processor.es6","name":null,"original":{"line":98,"column":71},"generated":{"line":179,"column":71}},{"source":"processor.es6","name":null,"original":{"line":99,"column":6},"generated":{"line":180,"column":0}},{"source":"processor.es6","name":"process","original":{"line":99,"column":10},"generated":{"line":180,"column":10}},{"source":"processor.es6","name":null,"original":{"line":99,"column":35},"generated":{"line":180,"column":28}},{"source":"processor.es6","name":null,"original":{"line":99,"column":6},"generated":{"line":180,"column":40}},{"source":"processor.es6","name":null,"original":{"line":99,"column":49},"generated":{"line":180,"column":42}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":181,"column":0}},{"source":"processor.es6","name":null,"original":{"line":100,"column":12},"generated":{"line":181,"column":12}},{"source":"processor.es6","name":"console","original":{"line":100,"column":19},"generated":{"line":181,"column":19}},{"source":"processor.es6","name":null,"original":{"line":100,"column":12},"generated":{"line":181,"column":26}},{"source":"processor.es6","name":null,"original":{"line":100,"column":31},"generated":{"line":181,"column":31}},{"source":"processor.es6","name":null,"original":{"line":100,"column":12},"generated":{"line":181,"column":42}},{"source":"processor.es6","name":"console","original":{"line":100,"column":46},"generated":{"line":181,"column":46}},{"source":"processor.es6","name":null,"original":{"line":100,"column":53},"generated":{"line":181,"column":53}},{"source":"processor.es6","name":"warn","original":{"line":100,"column":54},"generated":{"line":181,"column":54}},{"source":"processor.es6","name":null,"original":{"line":100,"column":8},"generated":{"line":181,"column":58}},{"source":"processor.es6","name":null,"original":{"line":100,"column":60},"generated":{"line":181,"column":60}},{"source":"processor.es6","name":"console","original":{"line":101,"column":10},"generated":{"line":182,"column":0}},{"source":"processor.es6","name":"console","original":{"line":101,"column":10},"generated":{"line":182,"column":10}},{"source":"processor.es6","name":null,"original":{"line":101,"column":17},"generated":{"line":182,"column":17}},{"source":"processor.es6","name":"warn","original":{"line":101,"column":18},"generated":{"line":182,"column":18}},{"source":"processor.es6","name":"console","original":{"line":101,"column":10},"generated":{"line":182,"column":22}},{"source":"processor.es6","name":null,"original":{"line":102,"column":12},"generated":{"line":182,"column":23}},{"source":"processor.es6","name":null,"original":{"line":103,"column":12},"generated":{"line":182,"column":81}},{"source":"processor.es6","name":null,"original":{"line":102,"column":12},"generated":{"line":182,"column":143}},{"source":"processor.es6","name":null,"original":{"line":104,"column":12},"generated":{"line":182,"column":146}},{"source":"processor.es6","name":"console","original":{"line":101,"column":10},"generated":{"line":182,"column":212}},{"source":"processor.es6","name":null,"original":{"line":106,"column":9},"generated":{"line":183,"column":0}},{"source":"processor.es6","name":null,"original":{"line":107,"column":7},"generated":{"line":184,"column":0}},{"source":"processor.es6","name":null,"original":{"line":108,"column":5},"generated":{"line":185,"column":0}},{"source":"processor.es6","name":null,"original":{"line":109,"column":4},"generated":{"line":187,"column":0}},{"source":"processor.es6","name":null,"original":{"line":109,"column":11},"generated":{"line":187,"column":11}},{"source":"processor.es6","name":"LazyResult","original":{"line":109,"column":15},"generated":{"line":187,"column":15}},{"source":"processor.es6","name":"LazyResult","original":{"line":109,"column":15},"generated":{"line":187,"column":26}},{"source":"processor.es6","name":"LazyResult","original":{"line":109,"column":15},"generated":{"line":187,"column":27}},{"source":"processor.es6","name":null,"original":{"line":109,"column":11},"generated":{"line":187,"column":34}},{"source":"processor.es6","name":null,"original":{"line":109,"column":26},"generated":{"line":187,"column":35}},{"source":"processor.es6","name":null,"original":{"line":109,"column":11},"generated":{"line":187,"column":39}},{"source":"processor.es6","name":"css","original":{"line":109,"column":32},"generated":{"line":187,"column":41}},{"source":"processor.es6","name":null,"original":{"line":109,"column":11},"generated":{"line":187,"column":44}},{"source":"processor.es6","name":"opts","original":{"line":109,"column":37},"generated":{"line":187,"column":46}},{"source":"processor.es6","name":null,"original":{"line":109,"column":11},"generated":{"line":187,"column":50}},{"source":"processor.es6","name":null,"original":{"line":109,"column":4},"generated":{"line":187,"column":51}},{"source":"processor.es6","name":"normalize","original":{"line":112,"column":2},"generated":{"line":190,"column":9}},{"source":"processor.es6","name":null,"original":{"line":112,"column":2},"generated":{"line":190,"column":21}},{"source":"processor.es6","name":null,"original":{"line":112,"column":2},"generated":{"line":190,"column":30}},{"source":"processor.es6","name":null,"original":{"line":112,"column":2},"generated":{"line":190,"column":39}},{"source":"processor.es6","name":"plugins","original":{"line":112,"column":13},"generated":{"line":190,"column":40}},{"source":"processor.es6","name":null,"original":{"line":112,"column":2},"generated":{"line":190,"column":47}},{"source":"processor.es6","name":null,"original":{"line":112,"column":22},"generated":{"line":190,"column":49}},{"source":"processor.es6","name":null,"original":{"line":113,"column":4},"generated":{"line":191,"column":0}},{"source":"processor.es6","name":"normalized","original":{"line":113,"column":8},"generated":{"line":191,"column":8}},{"source":"processor.es6","name":null,"original":{"line":113,"column":18},"generated":{"line":191,"column":18}},{"source":"processor.es6","name":null,"original":{"line":113,"column":21},"generated":{"line":191,"column":21}},{"source":"processor.es6","name":null,"original":{"line":113,"column":4},"generated":{"line":191,"column":23}},{"source":"processor.es6","name":null,"original":{"line":114,"column":4},"generated":{"line":193,"column":0}},{"source":"processor.es6","name":null,"original":{"line":114,"column":4},"generated":{"line":193,"column":9}},{"source":"processor.es6","name":null,"original":{"line":114,"column":4},"generated":{"line":193,"column":13}},{"source":"processor.es6","name":null,"original":{"line":114,"column":4},"generated":{"line":193,"column":22}},{"source":"processor.es6","name":null,"original":{"line":114,"column":4},"generated":{"line":193,"column":25}},{"source":"processor.es6","name":null,"original":{"line":114,"column":4},"generated":{"line":193,"column":56}},{"source":"processor.es6","name":"plugins","original":{"line":114,"column":18},"generated":{"line":193,"column":57}},{"source":"processor.es6","name":null,"original":{"line":114,"column":4},"generated":{"line":193,"column":64}},{"source":"processor.es6","name":null,"original":{"line":114,"column":4},"generated":{"line":193,"column":65}},{"source":"processor.es6","name":null,"original":{"line":114,"column":4},"generated":{"line":193,"column":67}},{"source":"processor.es6","name":null,"original":{"line":114,"column":4},"generated":{"line":193,"column":72}},{"source":"processor.es6","name":null,"original":{"line":114,"column":4},"generated":{"line":193,"column":74}},{"source":"processor.es6","name":null,"original":{"line":114,"column":4},"generated":{"line":193,"column":75}},{"source":"processor.es6","name":null,"original":{"line":114,"column":4},"generated":{"line":193,"column":76}},{"source":"processor.es6","name":null,"original":{"line":114,"column":4},"generated":{"line":193,"column":81}},{"source":"processor.es6","name":null,"original":{"line":114,"column":4},"generated":{"line":193,"column":84}},{"source":"processor.es6","name":null,"original":{"line":114,"column":4},"generated":{"line":193,"column":93}},{"source":"processor.es6","name":null,"original":{"line":114,"column":4},"generated":{"line":193,"column":95}},{"source":"processor.es6","name":null,"original":{"line":114,"column":4},"generated":{"line":193,"column":97}},{"source":"processor.es6","name":null,"original":{"line":114,"column":4},"generated":{"line":193,"column":101}},{"source":"processor.es6","name":null,"original":{"line":114,"column":27},"generated":{"line":193,"column":104}},{"source":"processor.es6","name":null,"original":{"line":114,"column":27},"generated":{"line":194,"column":0}},{"source":"processor.es6","name":"i","original":{"line":114,"column":13},"generated":{"line":194,"column":10}},{"source":"processor.es6","name":null,"original":{"line":114,"column":27},"generated":{"line":194,"column":11}},{"source":"processor.es6","name":null,"original":{"line":114,"column":27},"generated":{"line":194,"column":14}},{"source":"processor.es6","name":null,"original":{"line":114,"column":27},"generated":{"line":194,"column":19}},{"source":"processor.es6","name":null,"original":{"line":114,"column":27},"generated":{"line":194,"column":20}},{"source":"processor.es6","name":null,"original":{"line":114,"column":27},"generated":{"line":194,"column":25}},{"source":"processor.es6","name":null,"original":{"line":115,"column":6},"generated":{"line":196,"column":0}},{"source":"processor.es6","name":"i","original":{"line":115,"column":10},"generated":{"line":196,"column":10}},{"source":"processor.es6","name":null,"original":{"line":115,"column":11},"generated":{"line":196,"column":11}},{"source":"processor.es6","name":"postcss","original":{"line":115,"column":12},"generated":{"line":196,"column":12}},{"source":"processor.es6","name":"i","original":{"line":115,"column":10},"generated":{"line":196,"column":19}},{"source":"processor.es6","name":null,"original":{"line":115,"column":24},"generated":{"line":196,"column":24}},{"source":"processor.es6","name":null,"original":{"line":115,"column":6},"generated":{"line":196,"column":28}},{"source":"processor.es6","name":null,"original":{"line":115,"column":30},"generated":{"line":196,"column":30}},{"source":"processor.es6","name":null,"original":{"line":116,"column":8},"generated":{"line":197,"column":0}},{"source":"processor.es6","name":"plugin","original":{"line":116,"column":12},"generated":{"line":197,"column":12}},{"source":"processor.es6","name":null,"original":{"line":116,"column":18},"generated":{"line":197,"column":18}},{"source":"processor.es6","name":"i","original":{"line":116,"column":21},"generated":{"line":197,"column":21}},{"source":"processor.es6","name":null,"original":{"line":116,"column":22},"generated":{"line":197,"column":22}},{"source":"processor.es6","name":null,"original":{"line":116,"column":8},"generated":{"line":197,"column":24}},{"source":"processor.es6","name":null,"original":{"line":117,"column":8},"generated":{"line":198,"column":0}},{"source":"processor.es6","name":null,"original":{"line":117,"column":14},"generated":{"line":198,"column":14}},{"source":"processor.es6","name":"Error","original":{"line":117,"column":18},"generated":{"line":198,"column":18}},{"source":"processor.es6","name":null,"original":{"line":117,"column":14},"generated":{"line":198,"column":23}},{"source":"processor.es6","name":null,"original":{"line":118,"column":10},"generated":{"line":198,"column":24}},{"source":"processor.es6","name":"plugin","original":{"line":118,"column":30},"generated":{"line":198,"column":44}},{"source":"processor.es6","name":null,"original":{"line":118,"column":36},"generated":{"line":198,"column":50}},{"source":"processor.es6","name":"postcssPlugin","original":{"line":118,"column":37},"generated":{"line":198,"column":51}},{"source":"processor.es6","name":null,"original":{"line":118,"column":10},"generated":{"line":198,"column":64}},{"source":"processor.es6","name":null,"original":{"line":118,"column":53},"generated":{"line":198,"column":67}},{"source":"processor.es6","name":null,"original":{"line":118,"column":10},"generated":{"line":198,"column":91}},{"source":"processor.es6","name":null,"original":{"line":119,"column":10},"generated":{"line":198,"column":94}},{"source":"processor.es6","name":null,"original":{"line":118,"column":10},"generated":{"line":198,"column":128}},{"source":"processor.es6","name":null,"original":{"line":120,"column":10},"generated":{"line":198,"column":131}},{"source":"processor.es6","name":null,"original":{"line":117,"column":14},"generated":{"line":198,"column":196}},{"source":"processor.es6","name":null,"original":{"line":117,"column":8},"generated":{"line":198,"column":197}},{"source":"processor.es6","name":null,"original":{"line":122,"column":7},"generated":{"line":199,"column":0}},{"source":"processor.es6","name":null,"original":{"line":124,"column":6},"generated":{"line":201,"column":0}},{"source":"processor.es6","name":"i","original":{"line":124,"column":10},"generated":{"line":201,"column":10}},{"source":"processor.es6","name":null,"original":{"line":124,"column":11},"generated":{"line":201,"column":11}},{"source":"processor.es6","name":"postcss","original":{"line":124,"column":12},"generated":{"line":201,"column":12}},{"source":"processor.es6","name":null,"original":{"line":124,"column":6},"generated":{"line":201,"column":19}},{"source":"processor.es6","name":"i","original":{"line":124,"column":21},"generated":{"line":201,"column":21}},{"source":"processor.es6","name":null,"original":{"line":124,"column":22},"generated":{"line":201,"column":22}},{"source":"processor.es6","name":"i","original":{"line":124,"column":25},"generated":{"line":201,"column":25}},{"source":"processor.es6","name":null,"original":{"line":124,"column":26},"generated":{"line":201,"column":26}},{"source":"processor.es6","name":"postcss","original":{"line":124,"column":27},"generated":{"line":201,"column":27}},{"source":"processor.es6","name":"i","original":{"line":124,"column":21},"generated":{"line":201,"column":34}},{"source":"processor.es6","name":null,"original":{"line":126,"column":6},"generated":{"line":203,"column":0}},{"source":"processor.es6","name":null,"original":{"line":126,"column":10},"generated":{"line":203,"column":10}},{"source":"processor.es6","name":"i","original":{"line":126,"column":17},"generated":{"line":203,"column":17}},{"source":"processor.es6","name":null,"original":{"line":126,"column":10},"generated":{"line":203,"column":18}},{"source":"processor.es6","name":null,"original":{"line":126,"column":23},"generated":{"line":203,"column":23}},{"source":"processor.es6","name":null,"original":{"line":126,"column":10},"generated":{"line":203,"column":31}},{"source":"processor.es6","name":"Array","original":{"line":126,"column":35},"generated":{"line":203,"column":35}},{"source":"processor.es6","name":null,"original":{"line":126,"column":40},"generated":{"line":203,"column":40}},{"source":"processor.es6","name":"isArray","original":{"line":126,"column":41},"generated":{"line":203,"column":41}},{"source":"processor.es6","name":"Array","original":{"line":126,"column":35},"generated":{"line":203,"column":48}},{"source":"processor.es6","name":"i","original":{"line":126,"column":49},"generated":{"line":203,"column":49}},{"source":"processor.es6","name":null,"original":{"line":126,"column":50},"generated":{"line":203,"column":50}},{"source":"processor.es6","name":"plugins","original":{"line":126,"column":51},"generated":{"line":203,"column":51}},{"source":"processor.es6","name":"Array","original":{"line":126,"column":35},"generated":{"line":203,"column":58}},{"source":"processor.es6","name":null,"original":{"line":126,"column":6},"generated":{"line":203,"column":59}},{"source":"processor.es6","name":null,"original":{"line":126,"column":61},"generated":{"line":203,"column":61}},{"source":"processor.es6","name":"normalized","original":{"line":127,"column":8},"generated":{"line":204,"column":0}},{"source":"processor.es6","name":"normalized","original":{"line":127,"column":8},"generated":{"line":204,"column":8}},{"source":"processor.es6","name":null,"original":{"line":127,"column":18},"generated":{"line":204,"column":18}},{"source":"processor.es6","name":"normalized","original":{"line":127,"column":21},"generated":{"line":204,"column":21}},{"source":"processor.es6","name":null,"original":{"line":127,"column":31},"generated":{"line":204,"column":31}},{"source":"processor.es6","name":"concat","original":{"line":127,"column":32},"generated":{"line":204,"column":32}},{"source":"processor.es6","name":"normalized","original":{"line":127,"column":21},"generated":{"line":204,"column":38}},{"source":"processor.es6","name":"i","original":{"line":127,"column":39},"generated":{"line":204,"column":39}},{"source":"processor.es6","name":null,"original":{"line":127,"column":40},"generated":{"line":204,"column":40}},{"source":"processor.es6","name":"plugins","original":{"line":127,"column":41},"generated":{"line":204,"column":41}},{"source":"processor.es6","name":"normalized","original":{"line":127,"column":21},"generated":{"line":204,"column":48}},{"source":"processor.es6","name":"normalized","original":{"line":127,"column":8},"generated":{"line":204,"column":49}},{"source":"processor.es6","name":null,"original":{"line":126,"column":6},"generated":{"line":205,"column":0}},{"source":"processor.es6","name":null,"original":{"line":126,"column":6},"generated":{"line":205,"column":7}},{"source":"processor.es6","name":null,"original":{"line":128,"column":13},"generated":{"line":205,"column":13}},{"source":"processor.es6","name":null,"original":{"line":128,"column":17},"generated":{"line":205,"column":17}},{"source":"processor.es6","name":"i","original":{"line":128,"column":24},"generated":{"line":205,"column":24}},{"source":"processor.es6","name":null,"original":{"line":128,"column":17},"generated":{"line":205,"column":25}},{"source":"processor.es6","name":null,"original":{"line":128,"column":30},"generated":{"line":205,"column":30}},{"source":"processor.es6","name":null,"original":{"line":128,"column":13},"generated":{"line":205,"column":40}},{"source":"processor.es6","name":null,"original":{"line":128,"column":42},"generated":{"line":205,"column":42}},{"source":"processor.es6","name":"normalized","original":{"line":129,"column":8},"generated":{"line":206,"column":0}},{"source":"processor.es6","name":"normalized","original":{"line":129,"column":8},"generated":{"line":206,"column":8}},{"source":"processor.es6","name":null,"original":{"line":129,"column":18},"generated":{"line":206,"column":18}},{"source":"processor.es6","name":"push","original":{"line":129,"column":19},"generated":{"line":206,"column":19}},{"source":"processor.es6","name":"normalized","original":{"line":129,"column":8},"generated":{"line":206,"column":23}},{"source":"processor.es6","name":"i","original":{"line":129,"column":24},"generated":{"line":206,"column":24}},{"source":"processor.es6","name":"normalized","original":{"line":129,"column":8},"generated":{"line":206,"column":25}},{"source":"processor.es6","name":null,"original":{"line":128,"column":13},"generated":{"line":207,"column":0}},{"source":"processor.es6","name":null,"original":{"line":128,"column":13},"generated":{"line":207,"column":7}},{"source":"processor.es6","name":null,"original":{"line":130,"column":13},"generated":{"line":207,"column":13}},{"source":"processor.es6","name":null,"original":{"line":130,"column":17},"generated":{"line":207,"column":17}},{"source":"processor.es6","name":"i","original":{"line":130,"column":24},"generated":{"line":207,"column":24}},{"source":"processor.es6","name":null,"original":{"line":130,"column":17},"generated":{"line":207,"column":25}},{"source":"processor.es6","name":null,"original":{"line":130,"column":30},"generated":{"line":207,"column":30}},{"source":"processor.es6","name":null,"original":{"line":130,"column":17},"generated":{"line":207,"column":38}},{"source":"processor.es6","name":"i","original":{"line":130,"column":43},"generated":{"line":207,"column":43}},{"source":"processor.es6","name":null,"original":{"line":130,"column":44},"generated":{"line":207,"column":44}},{"source":"processor.es6","name":"parse","original":{"line":130,"column":45},"generated":{"line":207,"column":45}},{"source":"processor.es6","name":"i","original":{"line":130,"column":43},"generated":{"line":207,"column":50}},{"source":"processor.es6","name":"i","original":{"line":130,"column":54},"generated":{"line":207,"column":54}},{"source":"processor.es6","name":null,"original":{"line":130,"column":55},"generated":{"line":207,"column":55}},{"source":"processor.es6","name":"stringify","original":{"line":130,"column":56},"generated":{"line":207,"column":56}},{"source":"processor.es6","name":null,"original":{"line":130,"column":17},"generated":{"line":207,"column":65}},{"source":"processor.es6","name":null,"original":{"line":130,"column":13},"generated":{"line":207,"column":66}},{"source":"processor.es6","name":null,"original":{"line":130,"column":68},"generated":{"line":207,"column":68}},{"source":"processor.es6","name":null,"original":{"line":131,"column":8},"generated":{"line":208,"column":0}},{"source":"processor.es6","name":"process","original":{"line":131,"column":12},"generated":{"line":208,"column":12}},{"source":"processor.es6","name":null,"original":{"line":131,"column":37},"generated":{"line":208,"column":30}},{"source":"processor.es6","name":null,"original":{"line":131,"column":8},"generated":{"line":208,"column":42}},{"source":"processor.es6","name":null,"original":{"line":131,"column":51},"generated":{"line":208,"column":44}},{"source":"processor.es6","name":null,"original":{"line":132,"column":10},"generated":{"line":209,"column":0}},{"source":"processor.es6","name":null,"original":{"line":132,"column":16},"generated":{"line":209,"column":16}},{"source":"processor.es6","name":"Error","original":{"line":132,"column":20},"generated":{"line":209,"column":20}},{"source":"processor.es6","name":null,"original":{"line":132,"column":16},"generated":{"line":209,"column":25}},{"source":"processor.es6","name":null,"original":{"line":133,"column":12},"generated":{"line":209,"column":26}},{"source":"processor.es6","name":null,"original":{"line":134,"column":12},"generated":{"line":209,"column":95}},{"source":"processor.es6","name":null,"original":{"line":133,"column":12},"generated":{"line":209,"column":154}},{"source":"processor.es6","name":null,"original":{"line":135,"column":12},"generated":{"line":209,"column":157}},{"source":"processor.es6","name":null,"original":{"line":132,"column":16},"generated":{"line":209,"column":196}},{"source":"processor.es6","name":null,"original":{"line":132,"column":10},"generated":{"line":209,"column":197}},{"source":"processor.es6","name":null,"original":{"line":137,"column":9},"generated":{"line":210,"column":0}},{"source":"processor.es6","name":null,"original":{"line":130,"column":13},"generated":{"line":211,"column":0}},{"source":"processor.es6","name":null,"original":{"line":130,"column":13},"generated":{"line":211,"column":7}},{"source":"processor.es6","name":null,"original":{"line":138,"column":13},"generated":{"line":211,"column":13}},{"source":"processor.es6","name":null,"original":{"line":138,"column":17},"generated":{"line":211,"column":17}},{"source":"processor.es6","name":"i","original":{"line":138,"column":24},"generated":{"line":211,"column":24}},{"source":"processor.es6","name":null,"original":{"line":138,"column":17},"generated":{"line":211,"column":25}},{"source":"processor.es6","name":null,"original":{"line":138,"column":30},"generated":{"line":211,"column":30}},{"source":"processor.es6","name":null,"original":{"line":138,"column":17},"generated":{"line":211,"column":38}},{"source":"processor.es6","name":"i","original":{"line":138,"column":42},"generated":{"line":211,"column":42}},{"source":"processor.es6","name":null,"original":{"line":138,"column":43},"generated":{"line":211,"column":43}},{"source":"processor.es6","name":"postcssPlugin","original":{"line":138,"column":44},"generated":{"line":211,"column":44}},{"source":"processor.es6","name":null,"original":{"line":138,"column":13},"generated":{"line":211,"column":57}},{"source":"processor.es6","name":null,"original":{"line":138,"column":59},"generated":{"line":211,"column":59}},{"source":"processor.es6","name":null,"original":{"line":139,"column":8},"generated":{"line":212,"column":0}},{"source":"processor.es6","name":null,"original":{"line":139,"column":14},"generated":{"line":212,"column":14}},{"source":"processor.es6","name":"Error","original":{"line":139,"column":18},"generated":{"line":212,"column":18}},{"source":"processor.es6","name":null,"original":{"line":139,"column":14},"generated":{"line":212,"column":23}},{"source":"processor.es6","name":null,"original":{"line":140,"column":10},"generated":{"line":212,"column":24}},{"source":"processor.es6","name":"i","original":{"line":140,"column":30},"generated":{"line":212,"column":44}},{"source":"processor.es6","name":null,"original":{"line":140,"column":31},"generated":{"line":212,"column":45}},{"source":"processor.es6","name":"postcssPlugin","original":{"line":140,"column":32},"generated":{"line":212,"column":46}},{"source":"processor.es6","name":null,"original":{"line":140,"column":10},"generated":{"line":212,"column":59}},{"source":"processor.es6","name":null,"original":{"line":140,"column":48},"generated":{"line":212,"column":62}},{"source":"processor.es6","name":null,"original":{"line":140,"column":10},"generated":{"line":212,"column":86}},{"source":"processor.es6","name":null,"original":{"line":141,"column":10},"generated":{"line":212,"column":89}},{"source":"processor.es6","name":null,"original":{"line":140,"column":10},"generated":{"line":212,"column":123}},{"source":"processor.es6","name":null,"original":{"line":142,"column":10},"generated":{"line":212,"column":126}},{"source":"processor.es6","name":null,"original":{"line":139,"column":14},"generated":{"line":212,"column":191}},{"source":"processor.es6","name":null,"original":{"line":139,"column":8},"generated":{"line":212,"column":192}},{"source":"processor.es6","name":null,"original":{"line":138,"column":13},"generated":{"line":213,"column":0}},{"source":"processor.es6","name":null,"original":{"line":138,"column":13},"generated":{"line":213,"column":7}},{"source":"processor.es6","name":null,"original":{"line":144,"column":13},"generated":{"line":213,"column":13}},{"source":"processor.es6","name":null,"original":{"line":145,"column":8},"generated":{"line":214,"column":0}},{"source":"processor.es6","name":null,"original":{"line":145,"column":14},"generated":{"line":214,"column":14}},{"source":"processor.es6","name":"Error","original":{"line":145,"column":18},"generated":{"line":214,"column":18}},{"source":"processor.es6","name":null,"original":{"line":145,"column":14},"generated":{"line":214,"column":23}},{"source":"processor.es6","name":"i","original":{"line":145,"column":24},"generated":{"line":214,"column":24}},{"source":"processor.es6","name":null,"original":{"line":145,"column":25},"generated":{"line":214,"column":25}},{"source":"processor.es6","name":null,"original":{"line":145,"column":28},"generated":{"line":214,"column":28}},{"source":"processor.es6","name":null,"original":{"line":145,"column":14},"generated":{"line":214,"column":54}},{"source":"processor.es6","name":null,"original":{"line":145,"column":8},"generated":{"line":214,"column":55}},{"source":"processor.es6","name":null,"original":{"line":146,"column":7},"generated":{"line":215,"column":0}},{"source":"processor.es6","name":null,"original":{"line":147,"column":5},"generated":{"line":216,"column":0}},{"source":"processor.es6","name":null,"original":{"line":148,"column":4},"generated":{"line":218,"column":0}},{"source":"processor.es6","name":"normalized","original":{"line":148,"column":11},"generated":{"line":218,"column":11}},{"source":"processor.es6","name":null,"original":{"line":148,"column":4},"generated":{"line":218,"column":21}},{"source":"processor.es6","name":"Processor","original":{"line":152,"column":15},"generated":{"line":224,"column":15}},{"source":"processor.es6","name":null,"original":{"line":154,"column":0},"generated":{"line":225,"column":0}},{"source":"processor.es6","name":null,"original":{"line":161,"column":0},"generated":{"line":232,"column":0}},{"source":"processor.es6","name":null,"original":{"line":171,"column":0},"generated":{"line":242,"column":0}},{"source":"processor.es6","name":null,"original":{"line":181,"column":0},"generated":{"line":252,"column":0}},{"source":"processor.es6","name":null,"original":{"line":187,"column":0},"generated":{"line":258,"column":0}},{"source":"processor.es6","name":null,"original":{"line":192,"column":0},"generated":{"line":263,"column":0}},{"source":"processor.es6","name":null,"original":{"line":198,"column":0},"generated":{"line":269,"column":0}},{"source":"processor.es6","name":null,"original":{"line":203,"column":0},"generated":{"line":274,"column":0}}],"sources":{"processor.es6":"import LazyResult from './lazy-result'\n\n/**\n * Contains plugins to process CSS. Create one `Processor` instance,\n * initialize its plugins, and then use that instance on numerous CSS files.\n *\n * @example\n * const processor = postcss([autoprefixer, precss])\n * processor.process(css1).then(result => console.log(result.css))\n * processor.process(css2).then(result => console.log(result.css))\n */\nclass Processor {\n  /**\n   * @param {Array.<Plugin|pluginFunction>|Processor} plugins PostCSS plugins.\n   *        See {@link Processor#use} for plugin format.\n   */\n  constructor (plugins = []) {\n    /**\n     * Current PostCSS version.\n     *\n     * @type {string}\n     *\n     * @example\n     * if (result.processor.version.split('.')[0] !== '6') {\n     *   throw new Error('This plugin works only with PostCSS 6')\n     * }\n     */\n    this.version = '7.0.36'\n    /**\n     * Plugins added to this processor.\n     *\n     * @type {pluginFunction[]}\n     *\n     * @example\n     * const processor = postcss([autoprefixer, precss])\n     * processor.plugins.length //=> 2\n     */\n    this.plugins = this.normalize(plugins)\n  }\n\n  /**\n   * Adds a plugin to be used as a CSS processor.\n   *\n   * PostCSS plugin can be in 4 formats:\n   * * A plugin created by {@link postcss.plugin} method.\n   * * A function. PostCSS will pass the function a @{link Root}\n   *   as the first argument and current {@link Result} instance\n   *   as the second.\n   * * An object with a `postcss` method. PostCSS will use that method\n   *   as described in #2.\n   * * Another {@link Processor} instance. PostCSS will copy plugins\n   *   from that instance into this one.\n   *\n   * Plugins can also be added by passing them as arguments when creating\n   * a `postcss` instance (see [`postcss(plugins)`]).\n   *\n   * Asynchronous plugins should return a `Promise` instance.\n   *\n   * @param {Plugin|pluginFunction|Processor} plugin PostCSS plugin\n   *                                                 or {@link Processor}\n   *                                                 with plugins.\n   *\n   * @example\n   * const processor = postcss()\n   *   .use(autoprefixer)\n   *   .use(precss)\n   *\n   * @return {Processes} Current processor to make methods chain.\n   */\n  use (plugin) {\n    this.plugins = this.plugins.concat(this.normalize([plugin]))\n    return this\n  }\n\n  /**\n   * Parses source CSS and returns a {@link LazyResult} Promise proxy.\n   * Because some plugins can be asynchronous it doesn’t make\n   * any transformations. Transformations will be applied\n   * in the {@link LazyResult} methods.\n   *\n   * @param {string|toString|Result} css String with input CSS or any object\n   *                                     with a `toString()` method,\n   *                                     like a Buffer. Optionally, send\n   *                                     a {@link Result} instance\n   *                                     and the processor will take\n   *                                     the {@link Root} from it.\n   * @param {processOptions} [opts]      Options.\n   *\n   * @return {LazyResult} Promise proxy.\n   *\n   * @example\n   * processor.process(css, { from: 'a.css', to: 'a.out.css' })\n   *   .then(result => {\n   *      console.log(result.css)\n   *   })\n   */\n  process (css, opts = { }) {\n    if (this.plugins.length === 0 && opts.parser === opts.stringifier) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof console !== 'undefined' && console.warn) {\n          console.warn(\n            'You did not set any plugins, parser, or stringifier. ' +\n            'Right now, PostCSS does nothing. Pick plugins for your case ' +\n            'on https://www.postcss.parts/ and use them in postcss.config.js.'\n          )\n        }\n      }\n    }\n    return new LazyResult(this, css, opts)\n  }\n\n  normalize (plugins) {\n    let normalized = []\n    for (let i of plugins) {\n      if (i.postcss === true) {\n        let plugin = i()\n        throw new Error(\n          'PostCSS plugin ' + plugin.postcssPlugin + ' requires PostCSS 8.\\n' +\n          'Migration guide for end-users:\\n' +\n          'https://github.com/postcss/postcss/wiki/PostCSS-8-for-end-users'\n        )\n      }\n\n      if (i.postcss) i = i.postcss\n\n      if (typeof i === 'object' && Array.isArray(i.plugins)) {\n        normalized = normalized.concat(i.plugins)\n      } else if (typeof i === 'function') {\n        normalized.push(i)\n      } else if (typeof i === 'object' && (i.parse || i.stringify)) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error(\n            'PostCSS syntaxes cannot be used as plugins. Instead, please use ' +\n            'one of the syntax/parser/stringifier options as outlined ' +\n            'in your PostCSS runner documentation.'\n          )\n        }\n      } else if (typeof i === 'object' && i.postcssPlugin) {\n        throw new Error(\n          'PostCSS plugin ' + i.postcssPlugin + ' requires PostCSS 8.\\n' +\n          'Migration guide for end-users:\\n' +\n          'https://github.com/postcss/postcss/wiki/PostCSS-8-for-end-users'\n        )\n      } else {\n        throw new Error(i + ' is not a PostCSS plugin')\n      }\n    }\n    return normalized\n  }\n}\n\nexport default Processor\n\n/**\n * @callback builder\n * @param {string} part          Part of generated CSS connected to this node.\n * @param {Node}   node          AST node.\n * @param {\"start\"|\"end\"} [type] Node’s part type.\n */\n\n/**\n * @callback parser\n *\n * @param {string|toString} css   String with input CSS or any object\n *                                with toString() method, like a Buffer.\n * @param {processOptions} [opts] Options with only `from` and `map` keys.\n *\n * @return {Root} PostCSS AST\n */\n\n/**\n * @callback stringifier\n *\n * @param {Node} node       Start node for stringifing. Usually {@link Root}.\n * @param {builder} builder Function to concatenate CSS from node’s parts\n *                          or generate string and source map.\n *\n * @return {void}\n */\n\n/**\n * @typedef {object} syntax\n * @property {parser} parse          Function to generate AST by string.\n * @property {stringifier} stringify Function to generate string by AST.\n */\n\n/**\n * @typedef {object} toString\n * @property {function} toString\n */\n\n/**\n * @callback pluginFunction\n * @param {Root} root     Parsed input CSS.\n * @param {Result} result Result to set warnings or check other plugins.\n */\n\n/**\n * @typedef {object} Plugin\n * @property {function} postcss PostCSS plugin function.\n */\n\n/**\n * @typedef {object} processOptions\n * @property {string} from             The path of the CSS source file.\n *                                     You should always set `from`,\n *                                     because it is used in source map\n *                                     generation and syntax error messages.\n * @property {string} to               The path where you’ll put the output\n *                                     CSS file. You should always set `to`\n *                                     to generate correct source maps.\n * @property {parser} parser           Function to generate AST by string.\n * @property {stringifier} stringifier Class to generate string by AST.\n * @property {syntax} syntax           Object with `parse` and `stringify`.\n * @property {object} map              Source map options.\n * @property {boolean} map.inline                    Does source map should\n *                                                   be embedded in the output\n *                                                   CSS as a base64-encoded\n *                                                   comment.\n * @property {string|object|false|function} map.prev Source map content\n *                                                   from a previous\n *                                                   processing step\n *                                                   (for example, Sass).\n *                                                   PostCSS will try to find\n *                                                   previous map automatically,\n *                                                   so you could disable it by\n *                                                   `false` value.\n * @property {boolean} map.sourcesContent            Does PostCSS should set\n *                                                   the origin content to map.\n * @property {string|false} map.annotation           Does PostCSS should set\n *                                                   annotation comment to map.\n * @property {string} map.from                       Override `from` in map’s\n *                                                   sources`.\n */\n"},"lineCount":null}},"error":null,"hash":"cfccf4d5698542c6f7e685bee7466417","cacheData":{"env":{"NODE_ENV":"development"}}}