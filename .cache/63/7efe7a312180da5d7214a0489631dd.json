{"id":"node_modules/postcss/lib/result.js","dependencies":[{"name":"C:\\Users\\Admin\\Desktop\\Animestudio+\\package.json","includedInParent":true,"mtime":1627075610080},{"name":"C:\\Users\\Admin\\Desktop\\Animestudio+\\node_modules\\postcss\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./warning","loc":{"line":6,"column":46},"parent":"C:\\Users\\Admin\\Desktop\\Animestudio+\\node_modules\\postcss\\lib\\result.js","resolved":"C:\\Users\\Admin\\Desktop\\Animestudio+\\node_modules\\postcss\\lib\\warning.js"}],"generated":{"js":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _warning = _interopRequireDefault(require(\"./warning\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * Provides the result of the PostCSS transformations.\n *\n * A Result instance is returned by {@link LazyResult#then}\n * or {@link Root#toResult} methods.\n *\n * @example\n * postcss([autoprefixer]).process(css).then(result => {\n *  console.log(result.css)\n * })\n *\n * @example\n * const result2 = postcss.parse(css).toResult()\n */\n\n\nvar Result = /*#__PURE__*/function () {\n  /**\n   * @param {Processor} processor Processor used for this transformation.\n   * @param {Root}      root      Root node after all transformations.\n   * @param {processOptions} opts Options from the {@link Processor#process}\n   *                              or {@link Root#toResult}.\n   */\n  function Result(processor, root, opts) {\n    /**\n     * The Processor instance used for this transformation.\n     *\n     * @type {Processor}\n     *\n     * @example\n     * for (const plugin of result.processor.plugins) {\n     *   if (plugin.postcssPlugin === 'postcss-bad') {\n     *     throw 'postcss-good is incompatible with postcss-bad'\n     *   }\n     * })\n     */\n    this.processor = processor;\n    /**\n     * Contains messages from plugins (e.g., warnings or custom messages).\n     * Each message should have type and plugin properties.\n     *\n     * @type {Message[]}\n     *\n     * @example\n     * postcss.plugin('postcss-min-browser', () => {\n     *   return (root, result) => {\n     *     const browsers = detectMinBrowsersByCanIUse(root)\n     *     result.messages.push({\n     *       type: 'min-browser',\n     *       plugin: 'postcss-min-browser',\n     *       browsers\n     *     })\n     *   }\n     * })\n     */\n\n    this.messages = [];\n    /**\n     * Root node after all transformations.\n     *\n     * @type {Root}\n     *\n     * @example\n     * root.toResult().root === root\n     */\n\n    this.root = root;\n    /**\n     * Options from the {@link Processor#process} or {@link Root#toResult} call\n     * that produced this Result instance.\n     *\n     * @type {processOptions}\n     *\n     * @example\n     * root.toResult(opts).opts === opts\n     */\n\n    this.opts = opts;\n    /**\n     * A CSS string representing of {@link Result#root}.\n     *\n     * @type {string}\n     *\n     * @example\n     * postcss.parse('a{}').toResult().css //=> \"a{}\"\n     */\n\n    this.css = undefined;\n    /**\n     * An instance of `SourceMapGenerator` class from the `source-map` library,\n     * representing changes to the {@link Result#root} instance.\n     *\n     * @type {SourceMapGenerator}\n     *\n     * @example\n     * result.map.toJSON() //=> { version: 3, file: 'a.css', â€¦ }\n     *\n     * @example\n     * if (result.map) {\n     *   fs.writeFileSync(result.opts.to + '.map', result.map.toString())\n     * }\n     */\n\n    this.map = undefined;\n  }\n  /**\n   * Returns for @{link Result#css} content.\n   *\n   * @example\n   * result + '' === result.css\n   *\n   * @return {string} String representing of {@link Result#root}.\n   */\n\n\n  var _proto = Result.prototype;\n\n  _proto.toString = function toString() {\n    return this.css;\n  }\n  /**\n   * Creates an instance of {@link Warning} and adds it\n   * to {@link Result#messages}.\n   *\n   * @param {string} text        Warning message.\n   * @param {Object} [opts]      Warning options.\n   * @param {Node}   opts.node   CSS node that caused the warning.\n   * @param {string} opts.word   Word in CSS source that caused the warning.\n   * @param {number} opts.index  Index in CSS node string that caused\n   *                             the warning.\n   * @param {string} opts.plugin Name of the plugin that created\n   *                             this warning. {@link Result#warn} fills\n   *                             this property automatically.\n   *\n   * @return {Warning} Created warning.\n   */\n  ;\n\n  _proto.warn = function warn(text, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    if (!opts.plugin) {\n      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\n        opts.plugin = this.lastPlugin.postcssPlugin;\n      }\n    }\n\n    var warning = new _warning.default(text, opts);\n    this.messages.push(warning);\n    return warning;\n  }\n  /**\n     * Returns warnings from plugins. Filters {@link Warning} instances\n     * from {@link Result#messages}.\n     *\n     * @example\n     * result.warnings().forEach(warn => {\n     *   console.warn(warn.toString())\n     * })\n     *\n     * @return {Warning[]} Warnings from plugins.\n     */\n  ;\n\n  _proto.warnings = function warnings() {\n    return this.messages.filter(function (i) {\n      return i.type === 'warning';\n    });\n  }\n  /**\n   * An alias for the {@link Result#css} property.\n   * Use it with syntaxes that generate non-CSS output.\n   *\n   * @type {string}\n   *\n   * @example\n   * result.css === result.content\n   */\n  ;\n\n  _createClass(Result, [{\n    key: \"content\",\n    get: function get() {\n      return this.css;\n    }\n  }]);\n\n  return Result;\n}();\n\nvar _default = Result;\n/**\n * @typedef  {object} Message\n * @property {string} type   Message type.\n * @property {string} plugin Source PostCSS plugin name.\n */\n\nexports.default = _default;\nmodule.exports = exports.default;"},"sourceMaps":{"js":{"mappings":[{"source":"result.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":0}},{"source":"result.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":4}},{"source":"result.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":12}},{"source":"result.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":15}},{"source":"result.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":37}},{"source":"result.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":38}},{"source":"result.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":45}},{"source":"result.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":46}},{"source":"result.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":57}},{"source":"result.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":58}},{"source":"result.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":59}},{"source":"result.es6","name":null,"original":{"line":3,"column":0},"generated":{"line":29,"column":0}},{"source":"result.es6","name":"Result","original":{"line":17,"column":6},"generated":{"line":45,"column":4}},{"source":"result.es6","name":null,"original":{"line":18,"column":2},"generated":{"line":46,"column":0}},{"source":"result.es6","name":null,"original":{"line":24,"column":2},"generated":{"line":52,"column":0}},{"source":"result.es6","name":null,"original":{"line":24,"column":2},"generated":{"line":52,"column":11}},{"source":"result.es6","name":null,"original":{"line":24,"column":2},"generated":{"line":52,"column":17}},{"source":"result.es6","name":"processor","original":{"line":24,"column":15},"generated":{"line":52,"column":18}},{"source":"result.es6","name":null,"original":{"line":24,"column":2},"generated":{"line":52,"column":27}},{"source":"result.es6","name":"root","original":{"line":24,"column":26},"generated":{"line":52,"column":29}},{"source":"result.es6","name":null,"original":{"line":24,"column":2},"generated":{"line":52,"column":33}},{"source":"result.es6","name":"opts","original":{"line":24,"column":32},"generated":{"line":52,"column":35}},{"source":"result.es6","name":null,"original":{"line":24,"column":2},"generated":{"line":52,"column":39}},{"source":"result.es6","name":null,"original":{"line":24,"column":38},"generated":{"line":52,"column":41}},{"source":"result.es6","name":null,"original":{"line":25,"column":4},"generated":{"line":53,"column":0}},{"source":"result.es6","name":null,"original":{"line":37,"column":4},"generated":{"line":65,"column":0}},{"source":"result.es6","name":"processor","original":{"line":37,"column":9},"generated":{"line":65,"column":9}},{"source":"result.es6","name":null,"original":{"line":37,"column":4},"generated":{"line":65,"column":18}},{"source":"result.es6","name":"processor","original":{"line":37,"column":21},"generated":{"line":65,"column":21}},{"source":"result.es6","name":null,"original":{"line":37,"column":4},"generated":{"line":65,"column":30}},{"source":"result.es6","name":null,"original":{"line":38,"column":4},"generated":{"line":66,"column":0}},{"source":"result.es6","name":null,"original":{"line":56,"column":4},"generated":{"line":85,"column":0}},{"source":"result.es6","name":"messages","original":{"line":56,"column":9},"generated":{"line":85,"column":9}},{"source":"result.es6","name":null,"original":{"line":56,"column":4},"generated":{"line":85,"column":17}},{"source":"result.es6","name":null,"original":{"line":56,"column":20},"generated":{"line":85,"column":20}},{"source":"result.es6","name":null,"original":{"line":56,"column":4},"generated":{"line":85,"column":22}},{"source":"result.es6","name":null,"original":{"line":57,"column":4},"generated":{"line":86,"column":0}},{"source":"result.es6","name":null,"original":{"line":65,"column":4},"generated":{"line":95,"column":0}},{"source":"result.es6","name":"root","original":{"line":65,"column":9},"generated":{"line":95,"column":9}},{"source":"result.es6","name":null,"original":{"line":65,"column":4},"generated":{"line":95,"column":13}},{"source":"result.es6","name":"root","original":{"line":65,"column":16},"generated":{"line":95,"column":16}},{"source":"result.es6","name":null,"original":{"line":65,"column":4},"generated":{"line":95,"column":20}},{"source":"result.es6","name":null,"original":{"line":66,"column":4},"generated":{"line":96,"column":0}},{"source":"result.es6","name":null,"original":{"line":75,"column":4},"generated":{"line":106,"column":0}},{"source":"result.es6","name":"opts","original":{"line":75,"column":9},"generated":{"line":106,"column":9}},{"source":"result.es6","name":null,"original":{"line":75,"column":4},"generated":{"line":106,"column":13}},{"source":"result.es6","name":"opts","original":{"line":75,"column":16},"generated":{"line":106,"column":16}},{"source":"result.es6","name":null,"original":{"line":75,"column":4},"generated":{"line":106,"column":20}},{"source":"result.es6","name":null,"original":{"line":76,"column":4},"generated":{"line":107,"column":0}},{"source":"result.es6","name":null,"original":{"line":84,"column":4},"generated":{"line":116,"column":0}},{"source":"result.es6","name":"css","original":{"line":84,"column":9},"generated":{"line":116,"column":9}},{"source":"result.es6","name":null,"original":{"line":84,"column":4},"generated":{"line":116,"column":12}},{"source":"result.es6","name":"undefined","original":{"line":84,"column":15},"generated":{"line":116,"column":15}},{"source":"result.es6","name":null,"original":{"line":84,"column":4},"generated":{"line":116,"column":24}},{"source":"result.es6","name":null,"original":{"line":85,"column":4},"generated":{"line":117,"column":0}},{"source":"result.es6","name":null,"original":{"line":99,"column":4},"generated":{"line":132,"column":0}},{"source":"result.es6","name":"map","original":{"line":99,"column":9},"generated":{"line":132,"column":9}},{"source":"result.es6","name":null,"original":{"line":99,"column":4},"generated":{"line":132,"column":12}},{"source":"result.es6","name":"undefined","original":{"line":99,"column":15},"generated":{"line":132,"column":15}},{"source":"result.es6","name":null,"original":{"line":99,"column":4},"generated":{"line":132,"column":24}},{"source":"result.es6","name":null,"original":{"line":100,"column":3},"generated":{"line":133,"column":0}},{"source":"result.es6","name":null,"original":{"line":102,"column":2},"generated":{"line":134,"column":0}},{"source":"result.es6","name":"toString","original":{"line":110,"column":2},"generated":{"line":146,"column":9}},{"source":"result.es6","name":null,"original":{"line":110,"column":2},"generated":{"line":146,"column":20}},{"source":"result.es6","name":null,"original":{"line":110,"column":2},"generated":{"line":146,"column":29}},{"source":"result.es6","name":null,"original":{"line":110,"column":2},"generated":{"line":146,"column":37}},{"source":"result.es6","name":null,"original":{"line":110,"column":14},"generated":{"line":146,"column":40}},{"source":"result.es6","name":null,"original":{"line":111,"column":4},"generated":{"line":147,"column":0}},{"source":"result.es6","name":null,"original":{"line":111,"column":11},"generated":{"line":147,"column":11}},{"source":"result.es6","name":"css","original":{"line":111,"column":16},"generated":{"line":147,"column":16}},{"source":"result.es6","name":null,"original":{"line":111,"column":4},"generated":{"line":147,"column":19}},{"source":"result.es6","name":null,"original":{"line":112,"column":3},"generated":{"line":148,"column":0}},{"source":"result.es6","name":null,"original":{"line":114,"column":2},"generated":{"line":149,"column":0}},{"source":"result.es6","name":"warn","original":{"line":130,"column":2},"generated":{"line":167,"column":9}},{"source":"result.es6","name":null,"original":{"line":130,"column":2},"generated":{"line":167,"column":16}},{"source":"result.es6","name":null,"original":{"line":130,"column":2},"generated":{"line":167,"column":25}},{"source":"result.es6","name":null,"original":{"line":130,"column":2},"generated":{"line":167,"column":29}},{"source":"result.es6","name":"text","original":{"line":130,"column":8},"generated":{"line":167,"column":30}},{"source":"result.es6","name":null,"original":{"line":130,"column":2},"generated":{"line":167,"column":34}},{"source":"result.es6","name":"opts","original":{"line":130,"column":14},"generated":{"line":167,"column":36}},{"source":"result.es6","name":null,"original":{"line":130,"column":2},"generated":{"line":167,"column":40}},{"source":"result.es6","name":null,"original":{"line":130,"column":26},"generated":{"line":167,"column":42}},{"source":"result.es6","name":null,"original":{"line":130,"column":26},"generated":{"line":168,"column":0}},{"source":"result.es6","name":"opts","original":{"line":130,"column":14},"generated":{"line":168,"column":8}},{"source":"result.es6","name":null,"original":{"line":130,"column":26},"generated":{"line":168,"column":12}},{"source":"result.es6","name":null,"original":{"line":130,"column":26},"generated":{"line":168,"column":17}},{"source":"result.es6","name":null,"original":{"line":130,"column":26},"generated":{"line":168,"column":22}},{"source":"result.es6","name":null,"original":{"line":130,"column":26},"generated":{"line":168,"column":23}},{"source":"result.es6","name":null,"original":{"line":130,"column":26},"generated":{"line":168,"column":25}},{"source":"result.es6","name":"opts","original":{"line":130,"column":14},"generated":{"line":169,"column":0}},{"source":"result.es6","name":"opts","original":{"line":130,"column":14},"generated":{"line":169,"column":6}},{"source":"result.es6","name":null,"original":{"line":130,"column":26},"generated":{"line":169,"column":10}},{"source":"result.es6","name":null,"original":{"line":130,"column":21},"generated":{"line":169,"column":13}},{"source":"result.es6","name":"opts","original":{"line":130,"column":14},"generated":{"line":169,"column":15}},{"source":"result.es6","name":null,"original":{"line":130,"column":26},"generated":{"line":170,"column":0}},{"source":"result.es6","name":null,"original":{"line":131,"column":4},"generated":{"line":172,"column":0}},{"source":"result.es6","name":null,"original":{"line":131,"column":8},"generated":{"line":172,"column":8}},{"source":"result.es6","name":"opts","original":{"line":131,"column":9},"generated":{"line":172,"column":9}},{"source":"result.es6","name":null,"original":{"line":131,"column":13},"generated":{"line":172,"column":13}},{"source":"result.es6","name":"plugin","original":{"line":131,"column":14},"generated":{"line":172,"column":14}},{"source":"result.es6","name":null,"original":{"line":131,"column":4},"generated":{"line":172,"column":20}},{"source":"result.es6","name":null,"original":{"line":131,"column":22},"generated":{"line":172,"column":22}},{"source":"result.es6","name":null,"original":{"line":132,"column":6},"generated":{"line":173,"column":0}},{"source":"result.es6","name":null,"original":{"line":132,"column":10},"generated":{"line":173,"column":10}},{"source":"result.es6","name":"lastPlugin","original":{"line":132,"column":15},"generated":{"line":173,"column":15}},{"source":"result.es6","name":null,"original":{"line":132,"column":10},"generated":{"line":173,"column":25}},{"source":"result.es6","name":null,"original":{"line":132,"column":29},"generated":{"line":173,"column":29}},{"source":"result.es6","name":"lastPlugin","original":{"line":132,"column":34},"generated":{"line":173,"column":34}},{"source":"result.es6","name":null,"original":{"line":132,"column":29},"generated":{"line":173,"column":44}},{"source":"result.es6","name":"postcssPlugin","original":{"line":132,"column":45},"generated":{"line":173,"column":45}},{"source":"result.es6","name":null,"original":{"line":132,"column":6},"generated":{"line":173,"column":58}},{"source":"result.es6","name":null,"original":{"line":132,"column":60},"generated":{"line":173,"column":60}},{"source":"result.es6","name":"opts","original":{"line":133,"column":8},"generated":{"line":174,"column":0}},{"source":"result.es6","name":"opts","original":{"line":133,"column":8},"generated":{"line":174,"column":8}},{"source":"result.es6","name":null,"original":{"line":133,"column":12},"generated":{"line":174,"column":12}},{"source":"result.es6","name":"plugin","original":{"line":133,"column":13},"generated":{"line":174,"column":13}},{"source":"result.es6","name":"opts","original":{"line":133,"column":8},"generated":{"line":174,"column":19}},{"source":"result.es6","name":null,"original":{"line":133,"column":22},"generated":{"line":174,"column":22}},{"source":"result.es6","name":"lastPlugin","original":{"line":133,"column":27},"generated":{"line":174,"column":27}},{"source":"result.es6","name":null,"original":{"line":133,"column":22},"generated":{"line":174,"column":37}},{"source":"result.es6","name":"postcssPlugin","original":{"line":133,"column":38},"generated":{"line":174,"column":38}},{"source":"result.es6","name":"opts","original":{"line":133,"column":8},"generated":{"line":174,"column":51}},{"source":"result.es6","name":null,"original":{"line":134,"column":7},"generated":{"line":175,"column":0}},{"source":"result.es6","name":null,"original":{"line":135,"column":5},"generated":{"line":176,"column":0}},{"source":"result.es6","name":null,"original":{"line":137,"column":4},"generated":{"line":178,"column":0}},{"source":"result.es6","name":"warning","original":{"line":137,"column":8},"generated":{"line":178,"column":8}},{"source":"result.es6","name":null,"original":{"line":137,"column":15},"generated":{"line":178,"column":15}},{"source":"result.es6","name":null,"original":{"line":137,"column":18},"generated":{"line":178,"column":18}},{"source":"result.es6","name":"Warning","original":{"line":137,"column":22},"generated":{"line":178,"column":22}},{"source":"result.es6","name":"Warning","original":{"line":137,"column":22},"generated":{"line":178,"column":30}},{"source":"result.es6","name":"Warning","original":{"line":137,"column":22},"generated":{"line":178,"column":31}},{"source":"result.es6","name":null,"original":{"line":137,"column":18},"generated":{"line":178,"column":38}},{"source":"result.es6","name":"text","original":{"line":137,"column":30},"generated":{"line":178,"column":39}},{"source":"result.es6","name":null,"original":{"line":137,"column":18},"generated":{"line":178,"column":43}},{"source":"result.es6","name":"opts","original":{"line":137,"column":36},"generated":{"line":178,"column":45}},{"source":"result.es6","name":null,"original":{"line":137,"column":18},"generated":{"line":178,"column":49}},{"source":"result.es6","name":null,"original":{"line":137,"column":4},"generated":{"line":178,"column":50}},{"source":"result.es6","name":null,"original":{"line":138,"column":4},"generated":{"line":179,"column":0}},{"source":"result.es6","name":"messages","original":{"line":138,"column":9},"generated":{"line":179,"column":9}},{"source":"result.es6","name":null,"original":{"line":138,"column":4},"generated":{"line":179,"column":17}},{"source":"result.es6","name":"push","original":{"line":138,"column":18},"generated":{"line":179,"column":18}},{"source":"result.es6","name":null,"original":{"line":138,"column":4},"generated":{"line":179,"column":22}},{"source":"result.es6","name":"warning","original":{"line":138,"column":23},"generated":{"line":179,"column":23}},{"source":"result.es6","name":null,"original":{"line":138,"column":4},"generated":{"line":179,"column":30}},{"source":"result.es6","name":null,"original":{"line":140,"column":4},"generated":{"line":180,"column":0}},{"source":"result.es6","name":"warning","original":{"line":140,"column":11},"generated":{"line":180,"column":11}},{"source":"result.es6","name":null,"original":{"line":140,"column":4},"generated":{"line":180,"column":18}},{"source":"result.es6","name":null,"original":{"line":141,"column":3},"generated":{"line":181,"column":0}},{"source":"result.es6","name":null,"original":{"line":143,"column":2},"generated":{"line":182,"column":0}},{"source":"result.es6","name":"warnings","original":{"line":154,"column":2},"generated":{"line":195,"column":9}},{"source":"result.es6","name":null,"original":{"line":154,"column":2},"generated":{"line":195,"column":20}},{"source":"result.es6","name":null,"original":{"line":154,"column":2},"generated":{"line":195,"column":29}},{"source":"result.es6","name":null,"original":{"line":154,"column":2},"generated":{"line":195,"column":37}},{"source":"result.es6","name":null,"original":{"line":154,"column":14},"generated":{"line":195,"column":40}},{"source":"result.es6","name":null,"original":{"line":155,"column":4},"generated":{"line":196,"column":0}},{"source":"result.es6","name":null,"original":{"line":155,"column":11},"generated":{"line":196,"column":11}},{"source":"result.es6","name":"messages","original":{"line":155,"column":16},"generated":{"line":196,"column":16}},{"source":"result.es6","name":null,"original":{"line":155,"column":11},"generated":{"line":196,"column":24}},{"source":"result.es6","name":"filter","original":{"line":155,"column":25},"generated":{"line":196,"column":25}},{"source":"result.es6","name":null,"original":{"line":155,"column":11},"generated":{"line":196,"column":31}},{"source":"result.es6","name":null,"original":{"line":155,"column":32},"generated":{"line":196,"column":32}},{"source":"result.es6","name":"i","original":{"line":155,"column":32},"generated":{"line":196,"column":42}},{"source":"result.es6","name":null,"original":{"line":155,"column":32},"generated":{"line":196,"column":43}},{"source":"result.es6","name":null,"original":{"line":155,"column":33},"generated":{"line":196,"column":45}},{"source":"result.es6","name":null,"original":{"line":155,"column":33},"generated":{"line":197,"column":0}},{"source":"result.es6","name":"i","original":{"line":155,"column":37},"generated":{"line":197,"column":13}},{"source":"result.es6","name":null,"original":{"line":155,"column":38},"generated":{"line":197,"column":14}},{"source":"result.es6","name":"type","original":{"line":155,"column":39},"generated":{"line":197,"column":15}},{"source":"result.es6","name":"i","original":{"line":155,"column":37},"generated":{"line":197,"column":19}},{"source":"result.es6","name":null,"original":{"line":155,"column":48},"generated":{"line":197,"column":24}},{"source":"result.es6","name":null,"original":{"line":155,"column":33},"generated":{"line":197,"column":33}},{"source":"result.es6","name":null,"original":{"line":155,"column":11},"generated":{"line":198,"column":0}},{"source":"result.es6","name":null,"original":{"line":155,"column":11},"generated":{"line":198,"column":5}},{"source":"result.es6","name":null,"original":{"line":155,"column":4},"generated":{"line":198,"column":6}},{"source":"result.es6","name":null,"original":{"line":156,"column":3},"generated":{"line":199,"column":0}},{"source":"result.es6","name":null,"original":{"line":158,"column":2},"generated":{"line":200,"column":0}},{"source":"result.es6","name":null,"original":{"line":167,"column":17},"generated":{"line":213,"column":24}},{"source":"result.es6","name":null,"original":{"line":168,"column":4},"generated":{"line":214,"column":0}},{"source":"result.es6","name":null,"original":{"line":168,"column":11},"generated":{"line":214,"column":13}},{"source":"result.es6","name":"css","original":{"line":168,"column":16},"generated":{"line":214,"column":18}},{"source":"result.es6","name":null,"original":{"line":168,"column":4},"generated":{"line":214,"column":21}},{"source":"result.es6","name":null,"original":{"line":169,"column":3},"generated":{"line":215,"column":0}},{"source":"result.es6","name":"Result","original":{"line":172,"column":15},"generated":{"line":221,"column":15}},{"source":"result.es6","name":null,"original":{"line":174,"column":0},"generated":{"line":222,"column":0}}],"sources":{"result.es6":"import Warning from './warning'\n\n/**\n * Provides the result of the PostCSS transformations.\n *\n * A Result instance is returned by {@link LazyResult#then}\n * or {@link Root#toResult} methods.\n *\n * @example\n * postcss([autoprefixer]).process(css).then(result => {\n *  console.log(result.css)\n * })\n *\n * @example\n * const result2 = postcss.parse(css).toResult()\n */\nclass Result {\n  /**\n   * @param {Processor} processor Processor used for this transformation.\n   * @param {Root}      root      Root node after all transformations.\n   * @param {processOptions} opts Options from the {@link Processor#process}\n   *                              or {@link Root#toResult}.\n   */\n  constructor (processor, root, opts) {\n    /**\n     * The Processor instance used for this transformation.\n     *\n     * @type {Processor}\n     *\n     * @example\n     * for (const plugin of result.processor.plugins) {\n     *   if (plugin.postcssPlugin === 'postcss-bad') {\n     *     throw 'postcss-good is incompatible with postcss-bad'\n     *   }\n     * })\n     */\n    this.processor = processor\n    /**\n     * Contains messages from plugins (e.g., warnings or custom messages).\n     * Each message should have type and plugin properties.\n     *\n     * @type {Message[]}\n     *\n     * @example\n     * postcss.plugin('postcss-min-browser', () => {\n     *   return (root, result) => {\n     *     const browsers = detectMinBrowsersByCanIUse(root)\n     *     result.messages.push({\n     *       type: 'min-browser',\n     *       plugin: 'postcss-min-browser',\n     *       browsers\n     *     })\n     *   }\n     * })\n     */\n    this.messages = []\n    /**\n     * Root node after all transformations.\n     *\n     * @type {Root}\n     *\n     * @example\n     * root.toResult().root === root\n     */\n    this.root = root\n    /**\n     * Options from the {@link Processor#process} or {@link Root#toResult} call\n     * that produced this Result instance.\n     *\n     * @type {processOptions}\n     *\n     * @example\n     * root.toResult(opts).opts === opts\n     */\n    this.opts = opts\n    /**\n     * A CSS string representing of {@link Result#root}.\n     *\n     * @type {string}\n     *\n     * @example\n     * postcss.parse('a{}').toResult().css //=> \"a{}\"\n     */\n    this.css = undefined\n    /**\n     * An instance of `SourceMapGenerator` class from the `source-map` library,\n     * representing changes to the {@link Result#root} instance.\n     *\n     * @type {SourceMapGenerator}\n     *\n     * @example\n     * result.map.toJSON() //=> { version: 3, file: 'a.css', â€¦ }\n     *\n     * @example\n     * if (result.map) {\n     *   fs.writeFileSync(result.opts.to + '.map', result.map.toString())\n     * }\n     */\n    this.map = undefined\n  }\n\n  /**\n   * Returns for @{link Result#css} content.\n   *\n   * @example\n   * result + '' === result.css\n   *\n   * @return {string} String representing of {@link Result#root}.\n   */\n  toString () {\n    return this.css\n  }\n\n  /**\n   * Creates an instance of {@link Warning} and adds it\n   * to {@link Result#messages}.\n   *\n   * @param {string} text        Warning message.\n   * @param {Object} [opts]      Warning options.\n   * @param {Node}   opts.node   CSS node that caused the warning.\n   * @param {string} opts.word   Word in CSS source that caused the warning.\n   * @param {number} opts.index  Index in CSS node string that caused\n   *                             the warning.\n   * @param {string} opts.plugin Name of the plugin that created\n   *                             this warning. {@link Result#warn} fills\n   *                             this property automatically.\n   *\n   * @return {Warning} Created warning.\n   */\n  warn (text, opts = { }) {\n    if (!opts.plugin) {\n      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\n        opts.plugin = this.lastPlugin.postcssPlugin\n      }\n    }\n\n    let warning = new Warning(text, opts)\n    this.messages.push(warning)\n\n    return warning\n  }\n\n  /**\n     * Returns warnings from plugins. Filters {@link Warning} instances\n     * from {@link Result#messages}.\n     *\n     * @example\n     * result.warnings().forEach(warn => {\n     *   console.warn(warn.toString())\n     * })\n     *\n     * @return {Warning[]} Warnings from plugins.\n     */\n  warnings () {\n    return this.messages.filter(i => i.type === 'warning')\n  }\n\n  /**\n   * An alias for the {@link Result#css} property.\n   * Use it with syntaxes that generate non-CSS output.\n   *\n   * @type {string}\n   *\n   * @example\n   * result.css === result.content\n   */\n  get content () {\n    return this.css\n  }\n}\n\nexport default Result\n\n/**\n * @typedef  {object} Message\n * @property {string} type   Message type.\n * @property {string} plugin Source PostCSS plugin name.\n */\n"},"lineCount":null}},"error":null,"hash":"16c77f20625426abdbd4527dbd67c779","cacheData":{"env":{}}}